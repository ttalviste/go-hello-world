on: [push, pull_request]
name: Test
jobs:
  # The "build" workflow
  build:
    # The type of runner that the job will run on
    strategy:
      matrix:
        go-version: [1.12.x, 1.18.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v3

     # Setup Go
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }} # The Go version to download (if necessary) and use.
    # Install all the dependencies
    - name: Install dependencies
      run: |
        go version
        go get -u golang.org/x/lint/golint

    # Run build of the application
    - name: Run build
      run: go build .

    # Run vet & lint on the code
    - name: Run vet & lint
      run: |
        go vet .
        golint .
  test:
    strategy:
      matrix:
        go-version: [1.12.x, 1.18.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/checkout@v3
    - run: go test ./...

  test-cache:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: 1.18.x
    - uses: actions/checkout@v3
    - uses: actions/cache@v3
      with:
        # In order:
        # * Module download cache
        # * Build cache (Linux)
        # * Build cache (Mac)
        # * Build cache (Windows)
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
          ~\AppData\Local\go-build
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-
    - run: go test ./...
